const cron = require('node-cron');
const subscriberService = require('../services/subscriberService');
const { getAdviceForZodiac, getZodiacName } = require('../utils/zodiacUtils');
const bot = require('../bot'); // –ò–º–ø–æ—Ä—Ç –µ–¥–∏–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞

function startDailyBroadcast() {
  cron.schedule(
    '* * * * *', // –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 09:00 –ø–æ –ü–ê–†–ò–ñ–°–ö–û–ú–£ –≤—Ä–µ–º–µ–Ω–∏
    async () => {
      console.log('–ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏...');
      try {
        const subscribers = await subscriberService.getAllSubscribers({ subscribed: true });
        for (const sub of subscribers) {
          if (!sub.zodiacSign) continue;

          const advice = getAdviceForZodiac(sub.zodiacSign);
          const zodiacName = getZodiacName(sub.zodiacSign);

          await bot.sendMessage(
            sub.chatId,
            `üåô –õ—É–Ω–Ω—ã–π —Å–æ–≤–µ—Ç –¥–ª—è –∑–Ω–∞–∫–∞ ${zodiacName}:\n\n${advice}`
          );
        }
        console.log('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—Å—ã–ª–∫–µ:', error);
      }
    },
    {
      timezone: 'Europe/Paris', // –≤–∞–∂–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞!
    }
  );
}

module.exports = { startDailyBroadcast };
