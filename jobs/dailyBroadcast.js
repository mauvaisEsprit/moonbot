const cron = require('node-cron');
const subscriberService = require('../services/subscriberService');
const { getZodiacName } = require('../utils/zodiacUtils');
const bot = require('../bot');
const { getLongPhraseForSign } = require('../utils/getRotatedPhrase');

function startDailyBroadcast() {
  cron.schedule(
    '* * * * *', // –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 08:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
    async () => {
      console.log('–ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏...');
      try {
        const subscribers = await subscriberService.getAllSubscribers({ subscribed: true });

        let count = 0;

        for (const sub of subscribers) {
          if (!sub.zodiacSign) continue;

          const zodiacName = getZodiacName(sub.zodiacSign);
          const phrase = getLongPhraseForSign(sub.zodiacSign);

          const message = `üåô –õ—É–Ω–Ω—ã–π —Å–æ–≤–µ—Ç –¥–ª—è –∑–Ω–∞–∫–∞ *${zodiacName}*:\n\n${phrase}`;

          await bot.sendMessage(sub.chatId, message, { parse_mode: 'Markdown' });
          count++;
        }

        console.log(`–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${count}`);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—Å—ã–ª–∫–µ:', error);
      }
    },
    {
      timezone: 'Europe/Moscow',
    }
  );
}

module.exports = { startDailyBroadcast };
