const cron = require('node-cron');
const subscriberService = require('../services/subscriberService');
const { getAdviceForZodiac, getZodiacName } = require('../utils/zodiacUtils');
const bot = require('../bot'); // –ò–º–ø–æ—Ä—Ç –µ–¥–∏–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞

function startDailyBroadcast() {
// CRON: '* * * * *' –æ–∑–Ω–∞—á–∞–µ—Ç "–∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É".
// –§–æ—Ä–º–∞—Ç: –º–∏–Ω—É—Ç–∞ (0-59), —á–∞—Å (0-23), –¥–µ–Ω—å –º–µ—Å—è—Ü–∞ (1-31), –º–µ—Å—è—Ü (1-12), –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (0-7, –≥–¥–µ 0 –∏ 7 ‚Äî –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
// –ü—Ä–∏–º–µ—Ä: '30 14 * * 1-5' ‚Äî –∑–∞–ø—É—Å–∫ –≤ 14:30 –ø–æ –±—É–¥–Ω—è–º (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫‚Äì–ø—è—Ç–Ω–∏—Ü–∞)

  cron.schedule(
    '*/5 * * * *', // –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 09:00 –ø–æ –ü–ê–†–ò–ñ–°–ö–û–ú–£ –≤—Ä–µ–º–µ–Ω–∏
    async () => {
      console.log('–ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏...');
      try {
        const subscribers = await subscriberService.getAllSubscribers({ subscribed: true });
        for (const sub of subscribers) {
          if (!sub.zodiacSign) continue;

          const advice = getAdviceForZodiac(sub.zodiacSign);
          const zodiacName = getZodiacName(sub.zodiacSign);

          await bot.sendMessage(
            sub.chatId,
            `üåô –õ—É–Ω–Ω—ã–π —Å–æ–≤–µ—Ç –¥–ª—è –∑–Ω–∞–∫–∞ ${zodiacName}:\n\n${advice}`
          );
        }
        console.log('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—Å—ã–ª–∫–µ:', error);
      }
    },
    {
      timezone: 'Europe/Paris', // –≤–∞–∂–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞!
    }
  );
}

module.exports = { startDailyBroadcast };
