// jobs/dailyStats.js
const Subscriber = require('../models/Subscriber');
const bot = require('../bot');

async function sendDailyStats() {
  const now = new Date();
  const startOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate());

  try {
    // 1Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const total = await Subscriber.countDocuments();
    const subscribedTotal = await Subscriber.countDocuments({ subscribed: true });

    const newUsers = await Subscriber.countDocuments({
      createdAt: { $gte: startOfDay },
    });

    const newSubs = await Subscriber.countDocuments({
      subscribed: true,
      subscribedAt: { $gte: startOfDay },
    });

    const message = `
üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á—ë—Ç:

üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${total}
‚úÖ –ü–æ–¥–ø–∏—Å–∞–Ω—ã: ${subscribedTotal}
üÜï –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–µ–≥–æ–¥–Ω—è: ${newUsers}
‚ûï –ù–æ–≤—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ —Å–µ–≥–æ–¥–Ω—è: ${newSubs}
`;

    const YOUR_TELEGRAM_ID = process.env.TELEGRAM_ID;
    await bot.sendMessage(YOUR_TELEGRAM_ID, message);

    // 2Ô∏è‚É£ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–∞—Ö –∑–∞ —Å—É—Ç–∫–∏
    const newSubscribers = await Subscriber.find({
      subscribed: true,
      subscribedAt: { $gte: startOfDay },
    });

    for (const sub of newSubscribers) {
      console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–µ: ${sub.chatId}`);
      await bot.sendMessage(YOUR_TELEGRAM_ID,
        `‚úÖ –ù–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫!\nüí¨ –ò–º—è: ${sub.firstName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\nüÜî Chat ID: ${sub.chatId}\nüìÖ –î–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏: ${sub.subscribedAt.toLocaleString()}`
      );
    }

  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err);
  }
}

module.exports = sendDailyStats;