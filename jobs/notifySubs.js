// components/subscriptionNotifier.js
const bot = require('../bot');

async function notifySubscriptionChange(subscriber) {
  if (!subscriber || typeof subscriber.subscribed !== 'boolean') {
    console.log("notifySubscriptionChange: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç subscriber");
    return;
  }

  console.log("notifySubscriptionChange –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è", subscriber.chatId, "subscribed =", subscriber.subscribed);

  const YOUR_TELEGRAM_ID = process.env.TELEGRAM_ID;
  const status = subscriber.subscribed ? '‚úÖ –ù–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫' : '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø–∏—Å–∞–ª—Å—è';

  const dateFR = subscriber.subscribedAt
    ? subscriber.subscribedAt.toLocaleString('fr-FR', { dateStyle: 'short', timeStyle: 'short', timeZone: 'Europe/Paris' })
    : '-';

  try {
    await bot.sendMessage(
      YOUR_TELEGRAM_ID,
      `${status}!\nüí¨ –ò–º—è: ${subscriber.firstName || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\nüÜî Chat ID: ${subscriber.chatId}\nüìÖ –î–∞—Ç–∞: ${dateFR}`
    );
    console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${status} ${subscriber.chatId}`);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', err);
  }
}

module.exports = notifySubscriptionChange;